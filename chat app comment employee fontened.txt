npx create-react-app chat-frontend
cd chat-frontend


npm install @mui/material @emotion/react @emotion/styled


//webSocket hook
import { useEffect, useState } from 'react';

export const useWebSocket = (userId) => {
    const [ws, setWs] = useState(null);
    const [messages, setMessages] = useState([]);

    useEffect(() => {
        if (userId) {
            const socket = new WebSocket(`ws://${window.location.host}/ws/chat/${userId}/`);
            setWs(socket);

            socket.onmessage = (e) => {
                const data = JSON.parse(e.data);
                setMessages((prev) => [...prev, data]);
            };

            socket.onclose = () => {
                console.error('WebSocket closed unexpectedly');
            };

            return () => socket.close();
        }
    }, [userId]);

    const sendMessage = (message) => {
        if (ws) {
            ws.send(JSON.stringify(message));
        }
    };

    return { sendMessage, messages };
};


//Employee Chat Componenet
import React, { useState, useEffect } from 'react';
import { useWebSocket } from './useWebSocket';

const EmployeeChat = ({ adminId }) => {
    const [message, setMessage] = useState('');
    const [messages, setMessages] = useState([]);
    const { sendMessage, messages: wsMessages } = useWebSocket(adminId);

    useEffect(() => {
        setMessages(wsMessages);
    }, [wsMessages]);

    const handleSendMessage = () => {
        sendMessage({ message, recipient_id: adminId });
        setMessage('');
    };

    return (
        <div>
            <h2>Chat with Admin</h2>
            <div>
                {messages.map((msg, index) => (
                    <div key={index}>
                        <strong>{msg.sender}</strong>: {msg.message}
                    </div>
                ))}
            </div>
            <input 
                type="text"
                value={message}
                onChange={(e) => setMessage(e.target.value)}
            />
            <button onClick={handleSendMessage}>Send</button>
        </div>
    );
};

export default EmployeeChat;


//admin Chat Component
import React, { useState, useEffect } from 'react';
import { useWebSocket } from './useWebSocket';

const AdminChat = ({ employees }) => {
    const [selectedEmployee, setSelectedEmployee] = useState(null);
    const [message, setMessage] = useState('');
    const [messages, setMessages] = useState([]);
    const { sendMessage, messages: wsMessages } = useWebSocket(selectedEmployee?.id);

    useEffect(() => {
        setMessages(wsMessages);
    }, [wsMessages]);

    const handleSendMessage = () => {
        if (selectedEmployee) {
            sendMessage({ message, recipient_id: selectedEmployee.id });
            setMessage('');
        }
    };

    return (
        <div>
            <h2>Admin Panel</h2>
            <div>
                <h3>Employees</h3>
                <ul>
                    {employees.map(emp => (
                                                <li key={emp.id} onClick={() => setSelectedEmployee(emp)}>
                            {emp.username}
                        </li>
                    ))}
                </ul>
            </div>

            {selectedEmployee && (
                <div>
                    <h3>Chat with {selectedEmployee.username}</h3>
                    <div>
                        {messages.map((msg, index) => (
                            <div key={index}>
                                <strong>{msg.sender}</strong>: {msg.message}
                            </div>
                        ))}
                    </div>
                    <input 
                        type="text"
                        value={message}
                        onChange={(e) => setMessage(e.target.value)}
                    />
                    <button onClick={handleSendMessage}>Send</button>
                </div>
            )}
        </div>
    );
};

export default AdminChat;


//src/App.js
import React, { useState, useEffect } from 'react';
import EmployeeChat from './EmployeeChat';
import AdminChat from './AdminChat';
import axios from 'axios';

const App = () => {
    const [user, setUser] = useState(null);
    const [employees, setEmployees] = useState([]);

    useEffect(() => {
        // Fetch user and employees information
        axios.get('/api/user-info/').then((response) => {
            setUser(response.data.user);
            if (response.data.user.is_superuser) {
                axios.get('/api/employees/').then((response) => {
                    setEmployees(response.data);
                });
            }
        });
    }, []);

    if (!user) {
        return <div>Loading...</div>;
    }

    return (
        <div>
            {user.is_superuser ? (
                <AdminChat employees={employees} />
            ) : (
                <EmployeeChat adminId={/* Admin ID to be set based on your requirements */} />
            )}
        </div>
    );
};

export default App;


